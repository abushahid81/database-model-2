{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abush\\\\Documents\\\\Ready project need work\\\\database-model\\\\client\\\\src\\\\Product.js\";\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport \"./Product.css\";\n// import Modal from 'react-bootstrap/Modal';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BasicExample() {\n  // const [show, setShow] = useState(false);\n\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [price, setPrice] = useState(\"\");\n  // const [variant, setVariant] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n\n  // const handleCustomer = (e) => {\n  //     e.preventDefault();\n\n  //     if (id) {\n  //         axios.put(\"http://localhost:5002/notes\", { id, title, description, variant, price })\n  //             .then((response) => {\n  //                 setId(\"\");\n  //                 setTitle(\"\");\n  //                 setVariant(\"\")\n  //                 setDescription(\"\");\n  //                 setPrice(\"\")\n\n  //             })\n\n  //     } else {\n  //         axios.post(\"http://localhost:5002/notes\", { id, title, description, variant, price })\n  //             .then((response) => {\n  //                 setId(\"\");\n  //                 setTitle(\"\");\n  //                 setVariant(\"\");\n  //                 setDescription(\"\");\n  //                 setPrice(\"\")\n  //                 clearForm(\"\");\n\n  //             })\n\n  //     }\n  // }\n  // const clearForm = () => {\n  //     setId(\"\");\n  //     setTitle(\"\");\n  //     setVariant(\"\");\n  //     setDescription(\"\");\n  //     setPrice(\"\")\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleCustomer,\n      children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingPassword\",\n        label: \"Product Name\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingPassword\",\n        label: \"Variant\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingPassword\",\n        label: \"Discription\",\n        value: variant,\n        onChange: e => setVariant(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingPassword\",\n        label: \"Price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"ms-3\",\n        children: id ? 'Update' : 'Add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = BasicExample;\nexport default BasicExample;\nvar _c;\n$RefreshReg$(_c, \"BasicExample\");","map":{"version":3,"names":["Button","useState","axios","FloatingLabel","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","BasicExample","children","onSubmit","handleCustomer","controlId","label","value","title","onChange","e","setTitle","target","Control","type","className","fileName","_jsxFileName","lineNumber","columnNumber","description","setDescription","variant","setVariant","price","setPrice","id","_c","$RefreshReg$"],"sources":["C:/Users/abush/Documents/Ready project need work/database-model/client/src/Product.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport \"./Product.css\";\r\n// import Modal from 'react-bootstrap/Modal';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\n\r\n\r\nfunction BasicExample() {\r\n\r\n    // const [show, setShow] = useState(false);\r\n\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [price, setPrice] = useState(\"\");\r\n    // const [variant, setVariant] = useState(\"\");\r\n    // const [id, setId] = useState(\"\");\r\n\r\n\r\n\r\n    // const handleClose = () => setShow(false);\r\n    // const handleShow = () => setShow(true);\r\n\r\n\r\n    // const handleCustomer = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     if (id) {\r\n    //         axios.put(\"http://localhost:5002/notes\", { id, title, description, variant, price })\r\n    //             .then((response) => {\r\n    //                 setId(\"\");\r\n    //                 setTitle(\"\");\r\n    //                 setVariant(\"\")\r\n    //                 setDescription(\"\");\r\n    //                 setPrice(\"\")\r\n\r\n\r\n    //             })\r\n\r\n\r\n    //     } else {\r\n    //         axios.post(\"http://localhost:5002/notes\", { id, title, description, variant, price })\r\n    //             .then((response) => {\r\n    //                 setId(\"\");\r\n    //                 setTitle(\"\");\r\n    //                 setVariant(\"\");\r\n    //                 setDescription(\"\");\r\n    //                 setPrice(\"\")\r\n    //                 clearForm(\"\");\r\n\r\n    //             })\r\n\r\n    //     }\r\n    // }\r\n    // const clearForm = () => {\r\n    //     setId(\"\");\r\n    //     setTitle(\"\");\r\n    //     setVariant(\"\");\r\n    //     setDescription(\"\");\r\n    //     setPrice(\"\")\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* <Button variant=\"primary\" className='btn-1' onClick={handleShow}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4\" />\r\n                </svg>\r\n            </Button> */}\r\n\r\n\r\n            {/* <Modal.Title>Add Product</Modal.Title> */}\r\n\r\n\r\n            <Form onSubmit={handleCustomer}>\r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Product Name\" value={title} onChange={(e) => setTitle(e.target.value)}>\r\n                    <Form.Control type=\"text\" className=\"mb-3\" />\r\n                </FloatingLabel>\r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Variant\" value={description} onChange={(e) => setDescription(e.target.value)}>\r\n                    <Form.Control type=\"text\" className=\"mb-3\" />\r\n                </FloatingLabel>\r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Discription\" value={variant} onChange={(e) => setVariant(e.target.value)} >\r\n                    <Form.Control type=\"text\" className=\"mb-3\" />\r\n                </FloatingLabel>\r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Price\" value={price} onChange={(e) => setPrice(e.target.value)}>\r\n                    <Form.Control type=\"text\" className=\"mb-3\" />\r\n                </FloatingLabel>\r\n                <Button variant=\"secondary\">\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" type='submit' className='ms-3'>\r\n                    {id ? 'Update' : 'Add'}\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BasicExample;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}